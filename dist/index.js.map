{"version":3,"sources":["index.ts"],"names":["promises_1","require","generateInfo_1","read_local_file_1","start","readLocalJSONFile","userInput","_a","sent","mkdir","recursive","generateInfo"],"mappings":";y6CAEA,IAAAA,WAAAC,QAAA,eAEAC,eAAAD,QAAA,kBACAE,kBAAAF,QAAA,4BAKA,SAAeG,Q,gHACkB,MAAA,CAAA,EAAMD,kBAAAE,kBAAkB,sB,OAErD,OAFMC,EAAuBC,EAAAC,OAE7B,CAAA,EAAMR,WAAAS,MAAM,iBAAkB,CAAEC,WAAW,K,OAC3C,OADAH,EAAAC,OACA,CAAA,EAAMN,eAAAS,aAAaL,I,cAAnBC,EAAAC,O,SAGJJ","file":"index.js","sourcesContent":["#!/usr/bin/env node\n\nimport { mkdir, readFile } from 'fs/promises';\nimport { userInfo } from 'os';\nimport { generateInfo } from './generateInfo';\nimport { readLocalJSONFile } from './helper/read-local-file'\n\nimport { IUserInfo } from './interfaces/user-info.interface';\nimport { User } from './userObjectSchema';\n\nasync function start(): Promise<void> {\n    const userInput: IUserInfo = await readLocalJSONFile('.cloudcannon.json');\n    \n    await mkdir('./_cloudcannon', { recursive: true });\n    await generateInfo(userInput)\n}\n\nstart();\n\n\n// User.parse(\"thing\")\n// const result: IUser = User.safeParse(\"thing\");\n\n// if (!result.success) {\n//     // handle error then return\n//     result.error;\n//   } else {\n//     // do something\n//     result.data;\n//   }"]}